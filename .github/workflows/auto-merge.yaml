name: GitHub Actions Auto-merge
on:
   workflow_dispatch: {}
#    schedule:
#       - cron: "*/5 * * * *"
env:
 USERNAME: "sukanya"
 EMAIL: "sukanya5960@gmail.com"
 
jobs:
  merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-west-2

      - name: Merge main2 into stage2
        run: |
          git config user.name $USERNAME
          git config user.email $EMAIL
          git reset --hard
          git checkout main2
          git pull origin main2
          git checkout stage2
          git pull origin main2
          git merge --no-ff origin/main2 -m "Merge main2 into stage2 via GitHub Actions"
          
      - name: Check for merge conflicts
        run: |
          if git ls-files -u; then
            echo "Merge conflict detected"
            echo "Sending email alert"
            # Generate a patch of the merge conflict
            patch=$(git diff --name-only --diff-filter=U)
            # Get the full patch contents
            patch_content=$(git diff -U0 $patch)
            # Use the patch as the SNS subject
            # Replace with your AWS CLI command for sending an email notification using Amazon SNS
            # For example:
            aws sns publish --topic-arn arn:aws:sns:us-west-2:923801260899:sukanya-test --subject "merge status" --message "$patch_content
          else
            echo "Merge successful"
            aws sns publish --topic-arn arn:aws:sns:us-west-2:923801260899:sukanya-test --subject "merge status" --message "Success"
            git push origin stage2
          fi
